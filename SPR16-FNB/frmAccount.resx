<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EBERA//Z
</value>
  </data>
</root>